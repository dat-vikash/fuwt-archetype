<?xml version="1.0" encoding="UTF-8"?>
<!-- This configuration is to enable the use of spring mvc framework functionality such as HTTP Request Mapping
and integrating with Freemarker template engine to return views from those requests -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">


    <mvc:annotation-driven/>



    <!-- freemarker config for where to look for freemarker templates-->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/freemarker/"/>
    </bean>

    <!-- Configuration for returning views based on Accepts header content types.  Currently configured for the 3
     most common views which would be an html, json, and xml view. -->
    <bean id="contentNegotiatingViewResolver"
          class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver"
          p:order="#{T(org.springframework.core.Ordered).HIGHEST_PRECEDENCE}">
        <property name="mediaTypes">
            <map>
                <entry key="html" value="text/html"/>
                <entry key="json" value="application/json"/>
                <entry key="xml" value="application/xml"/>
            </map>
        </property>
        <property name="viewResolvers">
            <list>
                <!--

                  View resolvers can also be configured with ResourceBundles or XML files. If you need
                  different view resolving based on Locale, you have to use the resource bundle resolver.

                -->
                <bean id="freemarkerViewResolver"
                      class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
                    <property name="contentType" value="text/html"/>
                    <property name="cache" value="true"/>
                    <property name="prefix" value=""/>
                    <property name="suffix" value=".ftl"/>


                    <!-- if you want to use the Spring FreeMarker macros, set this property to true -->
                    <property name="exposeSpringMacroHelpers" value="true"/>

                </bean>

                <bean id="jspViewResolver"
                      class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <property name="contentType" value="text/html"/>
                    <property name="cache" value="true"/>
                    <property name="prefix" value=""/>
                    <property name="suffix" value=".jsp"/>
                    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>


                </bean>
            </list>
        </property>


        <property name="defaultViews">
            <list>
                <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
                    <property name="prefixJson" value="false"/>
                    <property name="contentType" value="application/json"/>
                </bean>


                <!-- TODO Configuration for marshalling Java objects as XML using JAXB.  Uncomment and
                      add classes configured with JAXB annotations to the classesToBeBound list below
                <bean class="org.springframework.web.servlet.view.xml.MarshallingView">
                    <property name="contentType" value="application/xml"/>


                    <property name="marshaller">
                        <bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
                            <property name="classesToBeBound">
                                <list>
                                    <value>org.fuwt.examples.SampleModel</value>
                                </list>
                            </property>
                        </bean>

                    </property>
                </bean>
                -->
            </list>
        </property>
    </bean>


</beans>