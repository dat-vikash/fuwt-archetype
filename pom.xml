<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>org.fuwt</groupId>
    <artifactId>fuwt-java-template</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>fuwt-java-template</name>

    <packaging>war</packaging>

    <properties>
        <spring.version>3.0.5.RELEASE</spring.version>
        <camel.version>2.7.0</camel.version>
        <logback.version>0.9.28</logback.version>
    </properties>

    <repositories>
        <repository>
            <id>jboss</id>
            <name>JBoss</name>
            <url>https://repository.jboss.org/nexus/content/repositories/releases/</url>
        </repository>
        <repository>
            <id>camel-extra-release</id>
            <name>Camel Extra Maven repository of releases</name>
            <url>http://camel-extra.googlecode.com/svn/maven2/releases</url>
        </repository>

    </repositories>


    <dependencies>
        <!-- Dependencies to handle logging -->
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.1.1</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.6.1</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.6.1</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-access</artifactId>
            <version>${logback.version}</version>
        </dependency>


        <!-- Dependencies for spring (IoC container and web framework, supports
    building REST web services -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-oxm</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- support for web service client and service interations, SOAP -->
        <dependency>
            <groupId>org.springframework.ws</groupId>
            <artifactId>spring-ws-core</artifactId>
            <version>2.0.0.RELEASE</version>
            <scope>compile</scope>
        </dependency>


        <!-- Dependency needed to support Spring implementation for @Configuration annotation -->
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>2.2</version>
            <scope>compile</scope>
        </dependency>

        <!-- Dependency to support object to json mapping used in spring -->
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>1.7.5</version>
            <scope>compile</scope>
        </dependency>

        <!-- Dependenct for template engine to be used for web view templates or
    generating specialized file formats -->
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>2.3.14</version>
            <scope>compile</scope>
        </dependency>


        <!-- Dependency for hibernate JPA implementation -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>3.4.0.GA</version>
            <scope>compile</scope>
        </dependency>


        <!-- Dependency for JSR 303 (Validations) and hibernate implementation of JSR -->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>1.0.0.GA</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>4.0.2.GA</version>
            <scope>compile</scope>
        </dependency>

        <!-- This is a rather powerful java based transformation engine
             for processing edi/object/xml/csv trandsformation -->
        <dependency>
            <groupId>org.milyn</groupId>
            <artifactId>milyn-smooks-all</artifactId>
            <version>1.4</version>
            <scope>compile</scope>
        </dependency>


        <!-- Dependency for Apache Camel, integration framework -->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-core</artifactId>
            <version>${camel.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-spring</artifactId>
            <version>${camel.version}</version>
            <scope>compile</scope>
        </dependency>


        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-jpa</artifactId>
            <version>${camel.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-jaxb</artifactId>
            <version>${camel.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-jms</artifactId>
            <version>${camel.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-camel</artifactId>
            <version>5.2.0</version>
        </dependency>

        <dependency>
            <!-- this packacge contains a special classloader needed for running camel in jboss-->
            <groupId>org.apache.camel.extra</groupId>
            <artifactId>camel-jboss</artifactId>
            <version>2.6.0</version>
            <scope>compile</scope>
        </dependency>


        <!-- Packages needed for encryption and decryption -->
        <dependency>
            <groupId>bouncycastle</groupId>
            <artifactId>bcprov-jdk15</artifactId>
            <version>140</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.jasypt</groupId>
            <artifactId>jasypt</artifactId>
            <version>1.7</version>
            <scope>compile</scope>
        </dependency>

        <!-- Dependency for JSP and JSTL specs, don't need to bundle these with the app
  so they are scoped as provided -->
        <dependency>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-jsp_2.2_spec</artifactId>
            <version>1.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
            <scope>provided</scope>
        </dependency>


        <!-- Dependencies from here on are only needed for unit test and possibly some automated
          integration test execution -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.ws</groupId>
            <artifactId>spring-ws-test</artifactId>
            <version>2.0.1.RELEASE</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.2</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>1.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>net.javacrumbs</groupId>
            <artifactId>smock-easymock</artifactId>
            <version>0.4</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- simple to use in memory db instance -->
            <groupId>hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>1.8.0.10</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- This dependency only needs to be scoped test because we will rely on JNDI datasources
                 to access the DB once deployed in a production envrionment -->
            <groupId>postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>8.4-702.jdbc4</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-jetty</artifactId>
            <version>${camel.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test</artifactId>
            <version>${camel.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- supports JNDI setup for testing in Jetty-->
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.4</version>
            <scope>test</scope>
        </dependency>


    </dependencies>

    <build>


        <finalName>fuwt-java-template</finalName>
        <plugins>

            <!-- Reads from a properties file to allow for external configuration
                 of the Maven build -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>1.0-alpha-2</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <quiet>true</quiet>
                            <files>
                                <file>/etc/fuwt-java-template++/app.properties</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Plugin to be used for quick servelt container testing -->
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <version>6.1.22</version>
                <configuration>
                    <useTestClasspath>true</useTestClasspath>
                    <jettyEnvXml>src/test/resources/WEB-INF/jetty-env.xml</jettyEnvXml>
                    <overrideWebXml>src/test/resources/WEB-INF/web-test.xml</overrideWebXml>
                </configuration>
            </plugin>

            <!-- Stock maven pluging declared here to configure java source and target version -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.5</source>
                    <target>1.5</target>
                </configuration>
            </plugin>

            <!-- Stock maven plugin for executing Unit Tests declared here to configure
            to not fail the build if the tests don't pass -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.8</version>
                <configuration>
                    <testFailureIgnore>true</testFailureIgnore>
                </configuration>
            </plugin>

            <!-- Stock maven plugin declared here to configure to not fail the build if the tests
          don't pass -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.8</version>
                <configuration>
                    <!-- will fork 1 process per test -->
                    <forkMode>always</forkMode>
                    <testFailureIgnore>true</testFailureIgnore>
                </configuration>
            </plugin>
        </plugins>
    </build>


</project>